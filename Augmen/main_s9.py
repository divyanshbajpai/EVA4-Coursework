# -*- coding: utf-8 -*-
"""Main-S9.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NdFdDKOVv2yonEPyLy_Ils20D-WzgfoA
"""

cd drive/My\ Drive/Session7

!pwd
!ls

import torch
from data_util import DataProducer as du
import model_function as mf
import model as mod
import plot as pp
import resnet as res
import gradcam

device = du.cuda_check()

classes = ('plane', 'car', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck')

SEED = 1
batch_size=128
torch.manual_seed(SEED)
data_producer=du()
train_loader, test_loader = data_producer.get_dataloader(batch_size=batch_size)

#mymodel=mod.Net(drop_val=0.1)
mymodel=res.ResNet18()

mf.model_summary(mymodel, device, input_size=(3, 32, 32))

EPOCHS = 25
mymodel =  mymodel.to(device)

train_acc, train_losses, test_acc, test_losses = mf.definemodel(mymodel, device,trainloader=train_loader, testloader=test_loader,epochs=EPOCHS,
                                                            lr=0.01,
                                                            decay=0.005)

mf.get_test_accuracy_cifar10(mymodel, device, test_loader)

mf.class_accuracy(mymodel, device, classes, test_loader)

pp.model_acc_loss(train_acc,test_acc,train_losses,test_losses)

#torch.save(mymodel.state_dict(), '/content/drive/My Drive/Session7/mymodel.pth')

# mymodel=res.ResNet18()
# mymodel.load_state_dict(torch.load('/content/drive/My Drive/Session7/mymodel.pth'))
#mymodel =  mymodel.to(device)

data_producer=du()
_, test_loader = data_producer.get_dataloader(batch_size=1)
it = iter(test_loader)

img,_=next(it)
gradcam.gradcamimpl(mymodel, img, classes)

img,_=next(it)
gradcam.gradcamimpl(mymodel, img, classes)

img,_=next(it)
gradcam.gradcamimpl(mymodel, img, classes)

img,_=next(it)
gradcam.gradcamimpl(mymodel, img, classes)

img,_=next(it)
gradcam.gradcamimpl(mymodel, img, classes)

img,_=next(it)
gradcam.gradcamimpl(mymodel, img, classes)